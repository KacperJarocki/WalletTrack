name: Backend CI/CD
on:
  workflow_dispatch:
  push:
    paths:
      - "backend/**"

jobs:
  build:
    runs-on: ubuntu-24.04
    container:
      image: gradle:8.5-jdk21
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
  
      - name: Cache Gradle dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ./backend/.gradle
            ./backend/build
            ./backend/gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/build.gradle') }}

      - name: Build without testing
        run: gradle build -x test
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'
          out: 'reports' # this is the default, no need to specify unless you wish to override it
          args: >
            --enableRetired
      - name: Upload Test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports
        
      - name: Caching Gradle dependencies after build
        uses: actions/cache/save@v4
        with:
          path: |
            ./backend/.gradle
            ./backend/build
            ./backend/gradle
          key:  ${{runner.os}}-gradle-${{ hashFiles('backend/build.gradle')}}

  unit-test:
    needs: build
    runs-on: ubuntu-24.04
    container:
      image: gradle:8.5-jdk21
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Cache Gradle dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            ./backend/.gradle
            ./backend/build
            ./backend/gradle
          key: ${{runner.os}}-gradle-${{ hashFiles('backend/build.gradle') }}

      - name: Unit Test
        run: gradle test
      
      - name: Archive test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-${{ runner.os}}-${{ github.sha }}
          path: ./backend/build/reports/tests/test
  docker-amd64:
    needs: unit-test
    permissions:
      packages: write
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set lowercase repo owner
        run: |
          echo "REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Login into GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner}}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push docker image
        uses: docker/build-push-action@v6
        with:
          context: backend
          push: true
          platforms: linux/amd64
          tags: ghcr.io/${{ env.REPO_OWNER }}/wallettrack/backend:${{ github.sha }}
      - name: Run Trivy with SARIF output
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'ghcr.io/${{ env.REPO_OWNER }}/wallettrack/backend:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results-${{ runner.os }}.sarif'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          
      - name: Upload Trivy SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results-${{ runner.os }}.sarif
  docker-arm64:
    needs: unit-test
    permissions:
      packages: write
      security-events: write
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set lowercase repo owner
        run: |
          echo "REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Login into GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner}}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push docker image
        uses: docker/build-push-action@v6
        with:
          context: backend
          push: true
          platforms: linux/arm64
          tags: ghcr.io/${{ env.REPO_OWNER }}/wallettrack/backend:${{ github.sha }}
     
      - name: Run Trivy with SARIF output
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: 'ghcr.io/${{ env.REPO_OWNER }}/wallettrack/backend:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results-${{ runner.os }}.sarif'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
        
      - name: Upload Trivy SARIF to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results-${{ runner.os }}.sarif

  configure-kubectl:
        runs-on: self-hosted
        needs: [docker-arm64,docker-amd64]
        environment:
            name: development
        steps:
            - name: Set up kubectl
              uses: azure/setup-kubectl@v4
            - name: Configure kubeconfig
              uses: azure/k8s-set-context@v4
              with:
                 method: kubeconfig
                 kubeconfig: ${{ secrets.KUBECONFIG }}
            - name: Test connection
              run: kubectl get nodes